[kbplacer_plugin_action.py:65]: Plugin version: 0.12
[kbplacer_plugin_action.py:66]: Python version: '3.11.5 (main, Nov  3 2024, 06:58:22) [MSC v.1939 64 bit (AMD64)]'
[kbplacer_plugin_action.py:67]: KiCad version: 8.0.7 with 4.2.2 msw (phoenix) wxWidgets 3.2.6
[kbplacer_dialog.py:585]: Language: en
[kbplacer_plugin_action.py:75]: GUI state: {"layout_path": "C:\\Users\\lboog\\Documents\\GitHub\\hackpad-v2\\v3\\points.json", "key_distance": [19.05, 19.05], "key_info": {"annotation_format": "SW{}", "position_option": "Default", "position": {"x": 0.0, "y": 0.0, "orientation": 0.0, "side": "Front"}, "template_path": ""}, "enable_diode_placement": true, "route_switches_with_diodes": true, "optimize_diodes_orientation": true, "diode_info": {"annotation_format": "D{}", "position_option": "Custom", "position": {"x": 5.0, "y": 5.0, "orientation": 180.0, "side": "Back"}, "template_path": ""}, "additional_elements": [], "route_rows_and_columns": false, "template_path": "", "generate_outline": false, "outline_delta": 0.0}
[key_placer.py:361]: Set key 1U distance: 19050000/19050000
[key_placer.py:116]: Unexpected switch net position detected, each switch should have two unique nets unambiguously defining position in key matrix, switch-by-matrix association can't be used
[key_placer.py:123]: Switches by nets: {}
[key_placer.py:127]: Diodes by switch: {'SW32': ['D33'], 'SW31': ['D32'], 'SW30': ['D31'], 'SW29': ['D30'], 'SW33': ['D29'], 'SW28': ['D28'], 'SW27': ['D27'], 'SW26': ['D26'], 'SW25': ['D25'], 'SW24': ['D24'], 'SW23': ['D23'], 'SW22': ['D22'], 'SW21': ['D21'], 'SW20': ['D20'], 'SW19': ['D19'], 'SW18': ['D18'], 'SW17': ['D17'], 'SW16': ['D16'], 'SW15': ['D15'], 'SW14': ['D14'], 'SW13': ['D13'], 'SW12': ['D12'], 'SW11': ['D11'], 'SW10': ['D10'], 'SW9': ['D9'], 'SW8': ['D8'], 'SW7': ['D7'], 'SW6': ['D6'], 'SW5': ['D5'], 'SW4': ['D4'], 'SW3': ['D3'], 'SW2': ['D2'], 'SW1': ['D1']}
[kle_serial.py:897]: User layout: {'matrix_outer_bottom': {'x': 110.7765238, 'y': -166.1318807, 'r': -15, 'meta': {'stagger': 0, 'spread': 18.2, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 27.299999999999997, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'outer_bottom', 'name': 'matrix_outer_bottom', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'row': 'bottom', 'bind': [10, 10, 10, 0]}}, 'matrix_outer_home': {'x': 115.4870304, 'y': -148.5520306, 'r': -15, 'meta': {'stagger': 0, 'spread': 18.2, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 27.299999999999997, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'outer_home', 'name': 'matrix_outer_home', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'row': 'home', 'bind': [10, 10, 10, 0]}}, 'matrix_outer_top': {'x': 120.197537, 'y': -130.9721806, 'r': -15, 'meta': {'stagger': 0, 'spread': 18.2, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 27.299999999999997, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'outer_top', 'name': 'matrix_outer_top', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'row': 'top', 'bind': [10, 10, 10, 0]}}, 'matrix_outer_num': {'x': 124.9080437, 'y': -113.3923306, 'r': -15, 'meta': {'stagger': 0, 'spread': 18.2, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 27.299999999999997, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'outer_num', 'name': 'matrix_outer_num', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'row': 'num', 'bind': [0, 10, 10, 0]}}, 'matrix_pinky_mod': {'x': 133.9587436, 'y': -172.3435378, 'r': -15, 'meta': {'stagger': 18.2, 'spread': 24, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'pinky_mod', 'name': 'matrix_pinky_mod', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'row': 'mod', 'bind': [10, 10, 0, 10]}}, 'matrix_pinky_bottom': {'x': 138.6692503, 'y': -154.7636877, 'r': -15, 'meta': {'stagger': 18.2, 'spread': 24, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'pinky_bottom', 'name': 'matrix_pinky_bottom', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'row': 'bottom', 'bind': [10, 10, 10, 10]}}, 'matrix_pinky_home': {'x': 143.3797569, 'y': -137.1838377, 'r': -15, 'meta': {'stagger': 18.2, 'spread': 24, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'pinky_home', 'name': 'matrix_pinky_home', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'row': 'home', 'bind': [10, 10, 10, 10]}}, 'matrix_pinky_top': {'x': 148.0902635, 'y': -119.6039876, 'r': -15, 'meta': {'stagger': 18.2, 'spread': 24, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'pinky_top', 'name': 'matrix_pinky_top', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'row': 'top', 'bind': [10, 10, 10, 10]}}, 'matrix_pinky_num': {'x': 152.8007701, 'y': -102.0241376, 'r': -15, 'meta': {'stagger': 18.2, 'spread': 24, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'pinky_num', 'name': 'matrix_pinky_num', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'row': 'num', 'bind': [0, 0, 10, 0]}}, 'matrix_ring_mod': {'x': 152.5045195, 'y': -177.3128634, 'r': -15.5, 'meta': {'stagger': 0, 'spread': 19.2, 'splay': -0.5, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'ring_mod', 'name': 'matrix_ring_mod', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'row': 'mod', 'bind': [10, 0, 0, 10]}}, 'matrix_ring_bottom': {'x': 157.3682579, 'y': -159.7747892, 'r': -15.5, 'meta': {'stagger': 0, 'spread': 19.2, 'splay': -0.5, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'ring_bottom', 'name': 'matrix_ring_bottom', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'row': 'bottom', 'bind': [10, 10, 10, 10]}}, 'matrix_ring_home': {'x': 162.2319963, 'y': -142.2367149, 'r': -15.5, 'meta': {'stagger': 0, 'spread': 19.2, 'splay': -0.5, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'ring_home', 'name': 'matrix_ring_home', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'row': 'home', 'bind': [10, 10, 10, 10]}}, 'matrix_ring_top': {'x': 167.0957347, 'y': -124.6986406, 'r': -15.5, 'meta': {'stagger': 0, 'spread': 19.2, 'splay': -0.5, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'ring_top', 'name': 'matrix_ring_top', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'row': 'top', 'bind': [10, 10, 10, 10]}}, 'matrix_ring_num': {'x': 171.9594731, 'y': -107.1605664, 'r': -15.5, 'meta': {'stagger': 0, 'spread': 19.2, 'splay': -0.5, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'ring_num', 'name': 'matrix_ring_num', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'row': 'num', 'bind': [0, 10, 10, 10]}}, 'matrix_middle_mod': {'x': 171.6743202, 'y': -180.0347641, 'r': -15.5, 'meta': {'stagger': 2.5, 'spread': 19.2, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'middle_mod', 'name': 'matrix_middle_mod', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'row': 'mod', 'bind': [10, 10, 0, 10]}}, 'matrix_middle_bottom': {'x': 176.5380586, 'y': -162.4966899, 'r': -15.5, 'meta': {'stagger': 2.5, 'spread': 19.2, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'middle_bottom', 'name': 'matrix_middle_bottom', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'row': 'bottom', 'bind': [10, 10, 10, 10]}}, 'matrix_middle_home': {'x': 181.401797, 'y': -144.9586156, 'r': -15.5, 'meta': {'stagger': 2.5, 'spread': 19.2, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'middle_home', 'name': 'matrix_middle_home', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'row': 'home', 'bind': [10, 10, 10, 10]}}, 'matrix_middle_top': {'x': 186.2655354, 'y': -127.4205414, 'r': -15.5, 'meta': {'stagger': 2.5, 'spread': 19.2, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'middle_top', 'name': 'matrix_middle_top', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'row': 'top', 'bind': [10, 10, 10, 10]}}, 'matrix_middle_num': {'x': 191.1292738, 'y': -109.8824671, 'r': -15.5, 'meta': {'stagger': 2.5, 'spread': 19.2, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'middle_num', 'name': 'matrix_middle_num', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'row': 'num', 'bind': [0, 0, 10, 0]}}, 'matrix_index_mod': {'x': 189.5079288, 'y': -187.5748171, 'r': -15.5, 'meta': {'stagger': -2.5, 'spread': 19.2, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'index_mod', 'name': 'matrix_index_mod', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'row': 'mod', 'bind': [10, 10, 0, 0]}}, 'matrix_index_bottom': {'x': 194.3716672, 'y': -170.0367428, 'r': -15.5, 'meta': {'stagger': -2.5, 'spread': 19.2, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'index_bottom', 'name': 'matrix_index_bottom', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'row': 'bottom', 'bind': [10, 10, 10, 10]}}, 'matrix_index_home': {'x': 199.2354056, 'y': -152.4986686, 'r': -15.5, 'meta': {'stagger': -2.5, 'spread': 19.2, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'index_home', 'name': 'matrix_index_home', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'row': 'home', 'bind': [10, 10, 10, 10]}}, 'matrix_index_top': {'x': 204.099144, 'y': -134.9605943, 'r': -15.5, 'meta': {'stagger': -2.5, 'spread': 19.2, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'index_top', 'name': 'matrix_index_top', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'row': 'top', 'bind': [10, 10, 10, 10]}}, 'matrix_index_num': {'x': 208.9628824, 'y': -117.42252, 'r': -15.5, 'meta': {'stagger': -2.5, 'spread': 19.2, 'splay': 0, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'index_num', 'name': 'matrix_index_num', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'row': 'num', 'bind': [0, 0, 10, 10]}}, 'matrix_inner_bottom': {'x': 212.3581375, 'y': -177.6199071, 'r': -16, 'meta': {'stagger': -2.5, 'spread': 19.2, 'splay': -0.5, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'inner_bottom', 'name': 'matrix_inner_bottom', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}, 'row': 'bottom', 'bind': [10, 0, 10, 10]}}, 'matrix_inner_home': {'x': 217.3747374, 'y': -160.1249442, 'r': -16, 'meta': {'stagger': -2.5, 'spread': 19.2, 'splay': -0.5, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'inner_home', 'name': 'matrix_inner_home', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}, 'row': 'home', 'bind': [10, 0, 10, 10]}}, 'matrix_inner_top': {'x': 222.3913373, 'y': -142.6299813, 'r': -16, 'meta': {'stagger': -2.5, 'spread': 19.2, 'splay': -0.5, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'inner_top', 'name': 'matrix_inner_top', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}, 'row': 'top', 'bind': [10, 0, 10, 10]}}, 'matrix_inner_num': {'x': 227.4079372, 'y': -125.1350184, 'r': -16, 'meta': {'stagger': -2.5, 'spread': 19.2, 'splay': -0.5, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'inner_num', 'name': 'matrix_inner_num', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'outer': {'rows': {'mod': {'skip': True}}, 'key': {'width': '1.5kc'}, 'name': 'outer'}, 'pinky': {'key': {'stagger': '1kc', 'spread': '1.25kp'}, 'rows': {}, 'name': 'pinky'}, 'ring': {'key': {'splay': -0.5, 'spread': 'kp'}, 'rows': {}, 'name': 'ring'}, 'middle': {'key': {'stagger': 2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'middle'}, 'index': {'key': {'stagger': -2.5, 'spread': 'kp'}, 'rows': {}, 'name': 'index'}, 'inner': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}}, 'rows': {'mod': {}, 'bottom': {}, 'home': {}, 'top': {}, 'num': {}}, 'name': 'matrix'}, 'col': {'rows': {'mod': {'skip': True}}, 'key': {'stagger': -2.5, 'splay': -0.5, 'spread': 'kp'}, 'name': 'inner'}, 'row': 'num', 'bind': [0, 0, 10, 10]}}, 'thumbs_first_cluster': {'x': 165.3008461, 'y': -203.8658845, 'r': -21, 'meta': {'stagger': 0, 'spread': 18.2, 'splay': -5, 'origin': [0, 0], 'orient': 0, 'shift': [0, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'first_cluster', 'name': 'thumbs_first_cluster', 'row_net': 'GP14', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'first': {'key': {'splay': -5}, 'rows': {}, 'name': 'first'}, 'second': {'key': {'splay': -5, 'shift': [2.5, 0]}, 'rows': {}, 'name': 'second'}, 'layer': {'key': {'splay': -10, 'shift': [5, 0], 'column_net': 'GP8'}, 'rows': {}, 'name': 'layer'}, 'space': {'key': {'splay': -10, 'shift': [7.5, 0], 'column_net': 'GP8'}, 'rows': {}, 'name': 'space'}}, 'rows': {'cluster': {'row_net': 'GP14'}}, 'name': 'thumbs'}, 'col': {'key': {'splay': -5}, 'rows': {}, 'name': 'first'}, 'row': 'cluster', 'bind': [0, 0, 0, 0]}}, 'thumbs_second_cluster': {'x': 184.538995, 'y': -211.484109, 'r': -26, 'meta': {'stagger': 0, 'spread': 18.2, 'splay': -5, 'origin': [0, 0], 'orient': 0, 'shift': [2.5, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'second_cluster', 'name': 'thumbs_second_cluster', 'row_net': 'GP14', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'first': {'key': {'splay': -5}, 'rows': {}, 'name': 'first'}, 'second': {'key': {'splay': -5, 'shift': [2.5, 0]}, 'rows': {}, 'name': 'second'}, 'layer': {'key': {'splay': -10, 'shift': [5, 0], 'column_net': 'GP8'}, 'rows': {}, 'name': 'layer'}, 'space': {'key': {'splay': -10, 'shift': [7.5, 0], 'column_net': 'GP8'}, 'rows': {}, 'name': 'space'}}, 'rows': {'cluster': {'row_net': 'GP14'}}, 'name': 'thumbs'}, 'col': {'key': {'splay': -5, 'shift': [2.5, 0]}, 'rows': {}, 'name': 'second'}, 'row': 'cluster', 'bind': [0, 0, 0, 0]}}, 'thumbs_layer_cluster': {'x': 202.6951464, 'y': -221.3054623, 'r': -36, 'meta': {'stagger': 0, 'spread': 18.2, 'splay': -10, 'origin': [0, 0], 'orient': 0, 'shift': [5, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'layer_cluster', 'name': 'thumbs_layer_cluster', 'column_net': 'GP8', 'row_net': 'GP14', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'first': {'key': {'splay': -5}, 'rows': {}, 'name': 'first'}, 'second': {'key': {'splay': -5, 'shift': [2.5, 0]}, 'rows': {}, 'name': 'second'}, 'layer': {'key': {'splay': -10, 'shift': [5, 0], 'column_net': 'GP8'}, 'rows': {}, 'name': 'layer'}, 'space': {'key': {'splay': -10, 'shift': [7.5, 0], 'column_net': 'GP8'}, 'rows': {}, 'name': 'space'}}, 'rows': {'cluster': {'row_net': 'GP14'}}, 'name': 'thumbs'}, 'col': {'key': {'splay': -10, 'shift': [5, 0], 'column_net': 'GP8'}, 'rows': {}, 'name': 'layer'}, 'row': 'cluster', 'bind': [0, 0, 0, 0]}}, 'thumbs_space_cluster': {'x': 218.5841086, 'y': -234.4592763, 'r': -46, 'meta': {'stagger': 0, 'spread': 18.2, 'splay': -10, 'origin': [0, 0], 'orient': 0, 'shift': [7.5, 0], 'rotate': 0, 'width': 18.5, 'height': 18.5, 'padding': 18.2, 'autobind': 10, 'skip': False, 'asym': 'both', 'colrow': 'space_cluster', 'name': 'thumbs_space_cluster', 'column_net': 'GP8', 'row_net': 'GP14', 'zone': {'key': {'padding': '1kc', 'spread': '1kc'}, 'columns': {'first': {'key': {'splay': -5}, 'rows': {}, 'name': 'first'}, 'second': {'key': {'splay': -5, 'shift': [2.5, 0]}, 'rows': {}, 'name': 'second'}, 'layer': {'key': {'splay': -10, 'shift': [5, 0], 'column_net': 'GP8'}, 'rows': {}, 'name': 'layer'}, 'space': {'key': {'splay': -10, 'shift': [7.5, 0], 'column_net': 'GP8'}, 'rows': {}, 'name': 'space'}}, 'rows': {'cluster': {'row_net': 'GP14'}}, 'name': 'thumbs'}, 'col': {'key': {'splay': -10, 'shift': [7.5, 0], 'column_net': 'GP8'}, 'rows': {}, 'name': 'space'}, 'row': 'cluster', 'bind': [0, 0, 0, 0]}}}
[key_placer.py:661]: Layout offset: (30562930, 26560999)
[board_modifier.py:85]: Setting SW1 footprint position: (190499999, 133350000)
[board_modifier.py:85]: Setting SW2 footprint position: (210553477, 138726317)
[board_modifier.py:85]: Setting SW3 footprint position: (230618570, 141575339)
[board_modifier.py:85]: Setting SW4 footprint position: (161304591, 145249125)
[board_modifier.py:85]: Setting SW5 footprint position: (249285067, 149467537)
[board_modifier.py:85]: Setting SW6 footprint position: (185569497, 151750887)
[board_modifier.py:85]: Setting SW7 footprint position: (205462586, 157083477)
[board_modifier.py:85]: Setting SW8 footprint position: (268591567, 157540235)
[board_modifier.py:85]: Setting SW9 footprint position: (225527679, 159932499)
[board_modifier.py:85]: Setting SW10 footprint position: (156374088, 163650012)
[board_modifier.py:85]: Setting SW11 footprint position: (244194176, 167824697)
[board_modifier.py:85]: Setting SW12 footprint position: (180638994, 170151774)
[board_modifier.py:85]: Setting SW13 footprint position: (200371695, 175440637)
[board_modifier.py:85]: Setting SW14 footprint position: (263340675, 175852270)
[board_modifier.py:85]: Setting SW15 footprint position: (220436788, 178289659)
[board_modifier.py:85]: Setting SW16 footprint position: (151443585, 182050899)
[board_modifier.py:85]: Setting SW17 footprint position: (239103285, 186181858)
[board_modifier.py:85]: Setting SW18 footprint position: (175708491, 188552661)
[board_modifier.py:85]: Setting SW19 footprint position: (195280804, 193797797)
[board_modifier.py:85]: Setting SW20 footprint position: (258089784, 194164305)
[board_modifier.py:85]: Setting SW21 footprint position: (215345897, 196646820)
[board_modifier.py:85]: Setting SW22 footprint position: (146513082, 200451786)
[board_modifier.py:85]: Setting SW23 footprint position: (234012394, 204539018)
[board_modifier.py:85]: Setting SW24 footprint position: (170777988, 206953548)
[board_modifier.py:85]: Setting SW25 footprint position: (190189913, 212154957)
[board_modifier.py:85]: Setting SW26 footprint position: (252838892, 212476341)
[board_modifier.py:85]: Setting SW27 footprint position: (210255006, 215003980)
[board_modifier.py:85]: Setting SW28 footprint position: (228921503, 222896178)
[board_modifier.py:85]: Setting SW29 footprint position: (203583870, 239948092)
[board_modifier.py:85]: Setting SW30 footprint position: (223720504, 247922113)
[board_modifier.py:85]: Setting SW31 footprint position: (242724607, 258202155)
[board_modifier.py:85]: Setting SW32 footprint position: (259355637, 271970296)
[key_placer.py:996]: Diode info: [ElementInfo(annotation_format='D{}', position_option=<PositionOption.CUSTOM: 'Custom'>, position=ElementPosition(x=5.0, y=5.0, orientation=180.0, side=<Side.BACK: 'Back'>), template_path='')]
[board_modifier.py:98]: Getting SW1 footprint position: (190499999, 133350000)
[board_modifier.py:85]: Setting D1 footprint position: (194035532, 139473724)
[board_modifier.py:98]: Getting D1 footprint position: (194035532, 139473724)
[board_modifier.py:98]: Getting SW2 footprint position: (210553477, 138726317)
[board_modifier.py:85]: Setting D2 footprint position: (214035437, 144880661)
[board_modifier.py:98]: Getting D2 footprint position: (214035437, 144880661)
[board_modifier.py:98]: Getting SW3 footprint position: (230618570, 141575339)
[board_modifier.py:85]: Setting D3 footprint position: (234100530, 147729683)
[board_modifier.py:98]: Getting D3 footprint position: (234100530, 147729683)
[board_modifier.py:98]: Getting SW4 footprint position: (161304591, 145249125)
[board_modifier.py:85]: Setting D4 footprint position: (164840124, 151372849)
[board_modifier.py:98]: Getting D4 footprint position: (164840124, 151372849)
[board_modifier.py:98]: Getting SW5 footprint position: (249285067, 149467537)
[board_modifier.py:85]: Setting D5 footprint position: (252767027, 155621881)
[board_modifier.py:98]: Getting D5 footprint position: (252767027, 155621881)
[board_modifier.py:98]: Getting SW6 footprint position: (185569497, 151750887)
[board_modifier.py:85]: Setting D6 footprint position: (189105030, 157874611)
[board_modifier.py:98]: Getting D6 footprint position: (189105030, 157874611)
[board_modifier.py:98]: Getting SW7 footprint position: (205462586, 157083477)
[board_modifier.py:85]: Setting D7 footprint position: (208944546, 163237821)
[board_modifier.py:98]: Getting D7 footprint position: (208944546, 163237821)
[board_modifier.py:98]: Getting SW8 footprint position: (268591567, 157540235)
[board_modifier.py:85]: Setting D8 footprint position: (272019688, 163724730)
[board_modifier.py:98]: Getting D8 footprint position: (272019688, 163724730)
[board_modifier.py:98]: Getting SW9 footprint position: (225527679, 159932499)
[board_modifier.py:85]: Setting D9 footprint position: (229009639, 166086843)
[board_modifier.py:98]: Getting D9 footprint position: (229009639, 166086843)
[board_modifier.py:98]: Getting SW10 footprint position: (156374088, 163650012)
[board_modifier.py:85]: Setting D10 footprint position: (159909621, 169773736)
[board_modifier.py:98]: Getting D10 footprint position: (159909621, 169773736)
[board_modifier.py:98]: Getting SW11 footprint position: (244194176, 167824697)
[board_modifier.py:85]: Setting D11 footprint position: (247676136, 173979041)
[board_modifier.py:98]: Getting D11 footprint position: (247676136, 173979041)
[board_modifier.py:98]: Getting SW12 footprint position: (180638994, 170151774)
[board_modifier.py:85]: Setting D12 footprint position: (184174527, 176275498)
[board_modifier.py:98]: Getting D12 footprint position: (184174527, 176275498)
[board_modifier.py:98]: Getting SW13 footprint position: (200371695, 175440637)
[board_modifier.py:85]: Setting D13 footprint position: (203853655, 181594981)
[board_modifier.py:98]: Getting D13 footprint position: (203853655, 181594981)
[board_modifier.py:98]: Getting SW14 footprint position: (263340675, 175852270)
[board_modifier.py:85]: Setting D14 footprint position: (266768796, 182036765)
[board_modifier.py:98]: Getting D14 footprint position: (266768796, 182036765)
[board_modifier.py:98]: Getting SW15 footprint position: (220436788, 178289659)
[board_modifier.py:85]: Setting D15 footprint position: (223918748, 184444003)
[board_modifier.py:98]: Getting D15 footprint position: (223918748, 184444003)
[board_modifier.py:98]: Getting SW16 footprint position: (151443585, 182050899)
[board_modifier.py:85]: Setting D16 footprint position: (154979118, 188174623)
[board_modifier.py:98]: Getting D16 footprint position: (154979118, 188174623)
[board_modifier.py:98]: Getting SW17 footprint position: (239103285, 186181858)
[board_modifier.py:85]: Setting D17 footprint position: (242585245, 192336202)
[board_modifier.py:98]: Getting D17 footprint position: (242585245, 192336202)
[board_modifier.py:98]: Getting SW18 footprint position: (175708491, 188552661)
[board_modifier.py:85]: Setting D18 footprint position: (179244024, 194676385)
[board_modifier.py:98]: Getting D18 footprint position: (179244024, 194676385)
[board_modifier.py:98]: Getting SW19 footprint position: (195280804, 193797797)
[board_modifier.py:85]: Setting D19 footprint position: (198762764, 199952141)
[board_modifier.py:98]: Getting D19 footprint position: (198762764, 199952141)
[board_modifier.py:98]: Getting SW20 footprint position: (258089784, 194164305)
[board_modifier.py:85]: Setting D20 footprint position: (261517905, 200348800)
[board_modifier.py:98]: Getting D20 footprint position: (261517905, 200348800)
[board_modifier.py:98]: Getting SW21 footprint position: (215345897, 196646820)
[board_modifier.py:85]: Setting D21 footprint position: (218827857, 202801164)
[board_modifier.py:98]: Getting D21 footprint position: (218827857, 202801164)
[board_modifier.py:98]: Getting SW22 footprint position: (146513082, 200451786)
[board_modifier.py:85]: Setting D22 footprint position: (150048615, 206575510)
[board_modifier.py:98]: Getting D22 footprint position: (150048615, 206575510)
[board_modifier.py:98]: Getting SW23 footprint position: (234012394, 204539018)
[board_modifier.py:85]: Setting D23 footprint position: (237494354, 210693362)
[board_modifier.py:98]: Getting D23 footprint position: (237494354, 210693362)
[board_modifier.py:98]: Getting SW24 footprint position: (170777988, 206953548)
[board_modifier.py:85]: Setting D24 footprint position: (174313521, 213077272)
[board_modifier.py:98]: Getting D24 footprint position: (174313521, 213077272)
[board_modifier.py:98]: Getting SW25 footprint position: (190189913, 212154957)
[board_modifier.py:85]: Setting D25 footprint position: (193671873, 218309301)
[board_modifier.py:98]: Getting D25 footprint position: (193671873, 218309301)
[board_modifier.py:98]: Getting SW26 footprint position: (252838892, 212476341)
[board_modifier.py:85]: Setting D26 footprint position: (256267013, 218660836)
[board_modifier.py:98]: Getting D26 footprint position: (256267013, 218660836)
[board_modifier.py:98]: Getting SW27 footprint position: (210255006, 215003980)
[board_modifier.py:85]: Setting D27 footprint position: (213736966, 221158324)
[board_modifier.py:98]: Getting D27 footprint position: (213736966, 221158324)
[board_modifier.py:98]: Getting SW28 footprint position: (228921503, 222896178)
[board_modifier.py:85]: Setting D28 footprint position: (232403463, 229050522)
[board_modifier.py:98]: Getting D28 footprint position: (232403463, 229050522)
[board_modifier.py:98]: Getting SW29 footprint position: (203583870, 239948092)
[board_modifier.py:85]: Setting D30 footprint position: (206459932, 246407833)
[board_modifier.py:98]: Getting D30 footprint position: (206459932, 246407833)
[board_modifier.py:98]: Getting SW30 footprint position: (223720504, 247922113)
[board_modifier.py:85]: Setting D31 footprint position: (226022618, 254607938)
[board_modifier.py:98]: Getting D31 footprint position: (226022618, 254607938)
[board_modifier.py:98]: Getting SW31 footprint position: (242724607, 258202155)
[board_modifier.py:85]: Setting D32 footprint position: (243830765, 265186166)
[board_modifier.py:98]: Getting D32 footprint position: (243830765, 265186166)
[board_modifier.py:98]: Getting SW32 footprint position: (259355637, 271970296)
[board_modifier.py:85]: Setting D33 footprint position: (259232230, 279040286)
[board_modifier.py:98]: Getting D33 footprint position: (259232230, 279040286)
[board_modifier.py:98]: Getting SW33 footprint position: (95400000, 91050000)
[board_modifier.py:85]: Setting D29 footprint position: (100400000, 96050000)
[key_placer.py:746]: Optimizing orientation of SW1 diodes
[board_modifier.py:98]: Getting D1 footprint position: (194035532, 139473724)
[key_placer.py:759]: Rotated D1 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW2 diodes
[board_modifier.py:98]: Getting D2 footprint position: (214035437, 144880661)
[key_placer.py:759]: Rotated D2 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW3 diodes
[board_modifier.py:98]: Getting D3 footprint position: (234100530, 147729683)
[key_placer.py:759]: Rotated D3 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW4 diodes
[board_modifier.py:98]: Getting D4 footprint position: (164840124, 151372849)
[key_placer.py:759]: Rotated D4 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW5 diodes
[board_modifier.py:98]: Getting D5 footprint position: (252767027, 155621881)
[key_placer.py:759]: Rotated D5 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW6 diodes
[board_modifier.py:98]: Getting D6 footprint position: (189105030, 157874611)
[key_placer.py:759]: Rotated D6 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW7 diodes
[board_modifier.py:98]: Getting D7 footprint position: (208944546, 163237821)
[key_placer.py:759]: Rotated D7 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW8 diodes
[board_modifier.py:98]: Getting D8 footprint position: (272019688, 163724730)
[key_placer.py:759]: Rotated D8 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW9 diodes
[board_modifier.py:98]: Getting D9 footprint position: (229009639, 166086843)
[key_placer.py:759]: Rotated D9 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW10 diodes
[board_modifier.py:98]: Getting D10 footprint position: (159909621, 169773736)
[key_placer.py:759]: Rotated D10 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW11 diodes
[board_modifier.py:98]: Getting D11 footprint position: (247676136, 173979041)
[key_placer.py:759]: Rotated D11 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW12 diodes
[board_modifier.py:98]: Getting D12 footprint position: (184174527, 176275498)
[key_placer.py:759]: Rotated D12 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW13 diodes
[board_modifier.py:98]: Getting D13 footprint position: (203853655, 181594981)
[key_placer.py:759]: Rotated D13 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW14 diodes
[board_modifier.py:98]: Getting D14 footprint position: (266768796, 182036765)
[key_placer.py:759]: Rotated D14 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW15 diodes
[board_modifier.py:98]: Getting D15 footprint position: (223918748, 184444003)
[key_placer.py:759]: Rotated D15 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW16 diodes
[board_modifier.py:98]: Getting D16 footprint position: (154979118, 188174623)
[key_placer.py:759]: Rotated D16 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW17 diodes
[board_modifier.py:98]: Getting D17 footprint position: (242585245, 192336202)
[key_placer.py:759]: Rotated D17 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW18 diodes
[board_modifier.py:98]: Getting D18 footprint position: (179244024, 194676385)
[key_placer.py:759]: Rotated D18 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW19 diodes
[board_modifier.py:98]: Getting D19 footprint position: (198762764, 199952141)
[key_placer.py:759]: Rotated D19 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW20 diodes
[board_modifier.py:98]: Getting D20 footprint position: (261517905, 200348800)
[key_placer.py:759]: Rotated D20 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW21 diodes
[board_modifier.py:98]: Getting D21 footprint position: (218827857, 202801164)
[key_placer.py:759]: Rotated D21 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW22 diodes
[board_modifier.py:98]: Getting D22 footprint position: (150048615, 206575510)
[key_placer.py:759]: Rotated D22 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW23 diodes
[board_modifier.py:98]: Getting D23 footprint position: (237494354, 210693362)
[key_placer.py:759]: Rotated D23 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW24 diodes
[board_modifier.py:98]: Getting D24 footprint position: (174313521, 213077272)
[key_placer.py:759]: Rotated D24 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW25 diodes
[board_modifier.py:98]: Getting D25 footprint position: (193671873, 218309301)
[key_placer.py:759]: Rotated D25 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW26 diodes
[board_modifier.py:98]: Getting D26 footprint position: (256267013, 218660836)
[key_placer.py:759]: Rotated D26 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW27 diodes
[board_modifier.py:98]: Getting D27 footprint position: (213736966, 221158324)
[key_placer.py:759]: Rotated D27 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW28 diodes
[board_modifier.py:98]: Getting D28 footprint position: (232403463, 229050522)
[key_placer.py:759]: Rotated D28 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW29 diodes
[board_modifier.py:98]: Getting D30 footprint position: (206459932, 246407833)
[key_placer.py:759]: Rotated D30 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW30 diodes
[board_modifier.py:98]: Getting D31 footprint position: (226022618, 254607938)
[key_placer.py:759]: Rotated D31 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW31 diodes
[board_modifier.py:98]: Getting D32 footprint position: (243830765, 265186166)
[key_placer.py:759]: Rotated D32 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW32 diodes
[board_modifier.py:98]: Getting D33 footprint position: (259232230, 279040286)
[key_placer.py:759]: Rotated D33 to minimize distance
[key_placer.py:746]: Optimizing orientation of SW33 diodes
[board_modifier.py:98]: Getting D29 footprint position: (100400000, 96050000)
[key_placer.py:423]: Routing SW33 with D29
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW33:S2' at (102400000, 88550000) with pad 'D29:2' at (102900000, 96050000) using coordinate system rotated by 0 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(102400000, 88550000), (102400000, 95550000)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(102400000, 88550000), (102900000, 89050000)]
[board_modifier.py:450]: Track added
[board_modifier.py:445]: Adding track segment (F.Cu): [(102900000, 89050000), (102900000, 96050000)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW32 with D33
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW32:1' at (255404472, 266781802) with pad 'D33:2' at (256523062, 276234861) using coordinate system rotated by 46.0 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(255404472, 266781802), (256665275, 268087401)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(255404472, 266781802), (255262257, 274929259)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW31 with D32
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW31:1' at (237932496, 253778599) with pad 'D32:2' at (240675599, 262893804) using coordinate system rotated by 36.0 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(237932496, 253778599), (239400861, 254845428)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(237932496, 253778599), (239207232, 261826973)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW30 with D31
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW30:1' at (218233054, 244397902) with pad 'D31:2' at (222517321, 252898291) using coordinate system rotated by 26.0 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(218233054, 244397902), (219864364, 245193545)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(218233054, 244397902), (220886010, 252102647)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW29 with D30
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW29:1' at (197810146, 236915555) with pad 'D30:2' at (202818968, 245010198) using coordinate system rotated by 21.0 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(197810146, 236915555), (199504593, 237565991)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(197810146, 236915555), (201124519, 244359759)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW28 with D28
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW28:1' at (222883704, 220430989) with pad 'D28:2' at (228645304, 228008292) using coordinate system rotated by 15.5 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(222883704, 220430989), (224632692, 220916025)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(222883704, 220430989), (226896315, 227523254)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW27 with D27
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW27:1' at (204217207, 212538791) with pad 'D27:2' at (209978807, 220116094) using coordinate system rotated by 15.5 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(204217207, 212538791), (205966195, 213023827)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(204217207, 212538791), (208229818, 219631056)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW26 with D26
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW26:1' at (246822836, 209958556) with pad 'D26:2' at (252518092, 217585850) using coordinate system rotated by 16.0 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(246822836, 209958556), (248567523, 210458836)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(246822836, 209958556), (250773404, 217085568)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW25 with D25
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW25:1' at (184152114, 209689768) with pad 'D25:2' at (189913714, 217267071) using coordinate system rotated by 15.5 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(184152114, 209689768), (185901103, 210174805)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(184152114, 209689768), (188164724, 216782032)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW24 with D24
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW24:1' at (164718907, 204541142) with pad 'D24:2' at (170546410, 212067878) using coordinate system rotated by 15.0 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(164718907, 204541142), (166472060, 205010897)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(164718907, 204541142), (168793255, 211598121)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW23 with D23
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW23:1' at (227974595, 202073829) with pad 'D23:2' at (233736195, 209651132) using coordinate system rotated by 15.5 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(227974595, 202073829), (229723583, 202558865)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(227974595, 202073829), (231987206, 209166094)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW22 with D22
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW22:1' at (140454001, 198039380) with pad 'D22:2' at (146281504, 205566116) using coordinate system rotated by 15.0 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(140454001, 198039380), (142207154, 198509135)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(140454001, 198039380), (144528350, 205096359)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW21 with D21
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW21:1' at (209308098, 194181631) with pad 'D21:2' at (215069698, 201758934) using coordinate system rotated by 15.5 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(209308098, 194181631), (211057086, 194666667)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(209308098, 194181631), (213320709, 201273896)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW20 with D20
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW20:1' at (252073728, 191646520) with pad 'D20:2' at (257768984, 199273814) using coordinate system rotated by 16.0 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(252073728, 191646520), (253818415, 192146799)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(252073728, 191646520), (256024296, 198773532)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW19 with D19
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW19:1' at (189243005, 191332608) with pad 'D19:2' at (195004605, 198909911) using coordinate system rotated by 15.5 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(189243005, 191332608), (190991994, 191817645)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(189243005, 191332608), (193255615, 198424872)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW18 with D18
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW18:1' at (169649410, 186140255) with pad 'D18:2' at (175476913, 193666991) using coordinate system rotated by 15.0 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(169649410, 186140255), (171402562, 186610010)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(169649410, 186140255), (173723758, 193197234)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW17 with D17
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW17:1' at (233065486, 183716669) with pad 'D17:2' at (238827086, 191293972) using coordinate system rotated by 15.5 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(233065486, 183716669), (234814475, 184201706)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(233065486, 183716669), (237078096, 190808933)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW16 with D16
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW16:1' at (145384504, 179638493) with pad 'D16:2' at (151212007, 187165229) using coordinate system rotated by 15.0 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(145384504, 179638493), (147137657, 180108248)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(145384504, 179638493), (149458852, 186695472)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW15 with D15
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW15:1' at (214398989, 175824470) with pad 'D15:2' at (220160589, 183401773) using coordinate system rotated by 15.5 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(214398989, 175824470), (216147978, 176309507)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(214398989, 175824470), (218411598, 182916734)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW14 with D14
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW14:1' at (257324619, 173334485) with pad 'D14:2' at (263019875, 180961779) using coordinate system rotated by 16.0 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(257324619, 173334485), (259069307, 173834765)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(257324619, 173334485), (261275185, 180461496)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW13 with D13
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW13:1' at (194333896, 172975448) with pad 'D13:2' at (200095496, 180552751) using coordinate system rotated by 15.5 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(194333896, 172975448), (196082885, 173460485)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(194333896, 172975448), (198346506, 180067712)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW12 with D12
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW12:1' at (174579913, 167739368) with pad 'D12:2' at (180407416, 175266104) using coordinate system rotated by 15.0 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(174579913, 167739368), (176333066, 168209123)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(174579913, 167739368), (178654261, 174796347)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW11 with D11
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW11:1' at (238156377, 165359508) with pad 'D11:2' at (243917977, 172936811) using coordinate system rotated by 15.5 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(238156377, 165359508), (239905366, 165844545)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(238156377, 165359508), (242168986, 172451772)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW10 with D10
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW10:1' at (150315007, 161237606) with pad 'D10:2' at (156142510, 168764342) using coordinate system rotated by 15.0 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(150315007, 161237606), (152068159, 161707361)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(150315007, 161237606), (154389355, 168294585)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW9 with D9
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW9:1' at (219489880, 157467310) with pad 'D9:2' at (225251480, 165044613) using coordinate system rotated by 15.5 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(219489880, 157467310), (221238869, 157952347)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(219489880, 157467310), (223502489, 164559574)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW8 with D8
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW8:1' at (262575511, 155022450) with pad 'D8:2' at (268270767, 162649744) using coordinate system rotated by 16.0 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(262575511, 155022450), (264320199, 155522730)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(262575511, 155022450), (266526078, 162149461)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW7 with D7
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW7:1' at (199424787, 154618288) with pad 'D7:2' at (205186387, 162195591) using coordinate system rotated by 15.5 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(199424787, 154618288), (201173775, 155103324)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(199424787, 154618288), (203437398, 161710553)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW6 with D6
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW6:1' at (179510416, 149338481) with pad 'D6:2' at (185337919, 156865217) using coordinate system rotated by 15.0 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(179510416, 149338481), (181263569, 149808236)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(179510416, 149338481), (183584764, 156395460)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW5 with D5
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW5:1' at (243247268, 147002348) with pad 'D5:2' at (249008868, 154579651) using coordinate system rotated by 15.5 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(243247268, 147002348), (244996257, 147487385)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(243247268, 147002348), (247259877, 154094612)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW4 with D4
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW4:1' at (155245510, 142836719) with pad 'D4:2' at (161073013, 150363455) using coordinate system rotated by 15.0 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(155245510, 142836719), (156998663, 143306474)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(155245510, 142836719), (159319858, 149893698)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW3 with D3
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW3:1' at (224580771, 139110150) with pad 'D3:2' at (230342371, 146687453) using coordinate system rotated by 15.5 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(224580771, 139110150), (226329760, 139595187)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(224580771, 139110150), (228593380, 146202414)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW2 with D2
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW2:1' at (204515678, 136261128) with pad 'D2:2' at (210277278, 143838431) using coordinate system rotated by 15.5 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(204515678, 136261128), (206264666, 136746164)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(204515678, 136261128), (208528289, 143353393)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:423]: Routing SW1 with D1
[key_placer.py:425]: Using internal autorouter method
[board_modifier.py:522]: Routing at F.Cu layer
[board_modifier.py:539]: Netclass: Default, track width: 200000
[board_modifier.py:601]: Routing pad 'SW1:1' at (184440918, 130937594) with pad 'D1:2' at (190268421, 138464330) using coordinate system rotated by 15.0 degree(s)
[board_modifier.py:445]: Adding track segment (F.Cu): [(184440918, 130937594), (186194071, 131407349)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[board_modifier.py:445]: Adding track segment (F.Cu): [(184440918, 130937594), (188515267, 137994573)]
[board_modifier.py:455]: Could not add track segment due to detected collision
[key_placer.py:457]: Removing dangling tracks
[key_placer.py:469]: Removing 851bbfc4-ea91-40b6-b80f-6284ca179854
[key_placer.py:457]: Removing dangling tracks
